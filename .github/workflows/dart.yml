name: Build

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  morphy-ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package: [ morphy_annotation, morphy, example ]
        channel: [ stable ]
        dependencies: [ get, downgrade ]
        exclude:
          - channel: stable
            dependencies: downgrade

    steps:
      - uses: actions/checkout@v5

      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ matrix.channel }}
          cache: ${{ matrix.channel == 'stable' }}

      - name: Warm Flutter cache
        run: |
          flutter --version
          flutter precache --universal

      - name: Install dependencies
        run: flutter pub ${{ matrix.dependencies }}
        working-directory: ${{ matrix.package }}

      # Decide toolchain once and reuse
      - name: Detect package type
        id: detect
        run: |
          if grep -qE '^\s*flutter\s*:' pubspec.yaml || grep -qE 'sdk:\s*flutter' pubspec.yaml; then
            echo "runner=flutter" >> "$GITHUB_OUTPUT"
          else
            echo "runner=dart" >> "$GITHUB_OUTPUT"
          fi
        working-directory: ${{ matrix.package }}

      - name: Generate (build_runner)
        if: ${{ always() }}
        run: |
          if grep -qE '\bbuild_runner\b' pubspec.yaml; then
            if [ "${{ steps.detect.outputs.runner }}" = "flutter" ]; then
              flutter pub run build_runner build --delete-conflicting-outputs
            else
              dart run build_runner build --delete-conflicting-outputs
            fi
          fi
        working-directory: ${{ matrix.package }}

      - name: Test
        run: |
          if [ "${{ steps.detect.outputs.runner }}" = "flutter" ]; then
            echo "Flutter package → flutter test"
            flutter test -r expanded
          else
            echo "Pure Dart package → dart test"
            dart test -r expanded
          fi
        working-directory: ${{ matrix.package }}

name: Build

on:
  push:
    branches: [ master ]
  pull_request:
#  schedule:
#    - cron: "0 10 * * *"

jobs:
  morphy-ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package:
          - morphy
          - morphy_annotation
          - example
        channel: [ stable ]
        dependencies: [ get, downgrade ]
        exclude:
          - channel: stable
            dependencies: downgrade

    steps:
      - uses: actions/checkout@v5

      # Use Flutter SDK (brings its own Dart + frontend_server)
      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ matrix.channel }}
          cache: ${{ matrix.channel == 'stable' }}

      # (optional) remove example folder inside packages that don't need it; not
      # necessary in your layout, but keeping parity with freezed pattern:
      # - name: Removing example folder
      #   if: matrix.package != 'example'
      #   run: rm -rf example
      #   working-directory: ${{ matrix.package }}

      - name: Install dependencies
        run: flutter pub ${{ matrix.dependencies }}
        working-directory: ${{ matrix.package }}

        # Check formatting on stable (optional)
      - name: Check format
        if: matrix.channel == 'stable'
        run: dart format --set-exit-if-changed .
        working-directory: ${{ matrix.package }}

      # Run codegen only if build_runner is declared (same trick as freezed)
      - name: Generate (build_runner)
        run: |
          if grep -q build_runner "pubspec.yaml"; then
            dart pub run build_runner build --delete-conflicting-outputs
          fi
        working-directory: ${{ matrix.package }}

      # Analyze with Flutterâ€™s analyzer (works for Dart & Flutter pkgs)
      - name: Analyze
        run: flutter analyze
        working-directory: ${{ matrix.package }}

      # Choose test runner:
      # - use flutter test for the Flutter example
      # - use dart test for pure Dart packages
      - name: Test
        run: |
          if grep -q "^name: example$" "pubspec.yaml"; then
            flutter test -r expanded
          else
            dart test -r expanded
          fi
        working-directory: ${{ matrix.package }}
